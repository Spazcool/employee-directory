{"version":3,"sources":["components/Row.js","components/Table.js","components/SearchBar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Row","datum","index","term","cells","Object","keys","map","cell","key","undefined","highlightText","text","highlight","highlighted","_highlight","_text","toString","start","indexOf","length","finish","beginning","substring","middle","end","className","this","props","sortDir","list","item","toUpperCase","sortBy","displayArrow","onClick","event","target","closest","innerText","header","createHeader","createRow","React","Component","Table","state","data","sorted","col","dir","att","toLowerCase","sortedData","sort","a","b","reverse","setState","obj","included","forEach","includes","filter","row","includesTerm","role","id","rows","filterByTerm","searchTerm","striped","bordered","hover","variant","sortByCol","SearchBar","InputGroup","Prepend","Text","FormControl","value","onChange","handleInputChange","aria-label","aria-describedby","Header","Container","fluid","Col","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf78a039.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {GoTriangleUp, GoTriangleDown} from 'react-icons/go/';\n\n\nclass Row extends React.Component{\n  createRow(datum, index, term){\n    const att = Object.keys(datum);\n    const cells = att.map((cell) => (\n      <td key={`${cell}-cell-${index}`}>{datum[cell] === undefined ? 'X' : this.highlightText(datum[cell], term)}</td>\n    ));\n\n    return (  \n      <tr>\n        {cells}\n      </tr>\n    )\n  }\n\n  highlightText(text, highlight){\n    const _highlight = highlight;\n    const _text = text === null ? '' : text.toString();\n    const start = _text.indexOf(_highlight);\n    let highlighted;\n\n    if(start !== -1 && highlight.length > 0){\n      let finish = start + _highlight.length;\n      let beginning = _text.substring(0, start);\n      let middle = _text.substring(start, finish);\n      let end = _text.substring(finish, _text.length);\n      \n      highlighted = \n        <span>\n          <span>{beginning}</span>\n          <span className='highlighted'>{middle}</span>\n          <span>{end}</span>\n        </span>;\n    }else{\n      highlighted = text;\n    }\n  \n    return highlighted;\n  }\n\n  displayArrow(){\n    return this.props.sortDir === 'ascending' ? <GoTriangleUp/> : <GoTriangleDown/>;\n  }\n\n  createHeader(list){\n    const cells = list.map((item) => (\n      <th key={`${item}-header`} className=\"hovered\">\n        {item.toUpperCase()}\n        {item === this.props.sortBy ? this.displayArrow() : ''}\n      </th>\n    ));\n\n    return (\n      <tr onClick={(event) => this.props.onClick(event.target.closest('th').innerText)}>\n       {cells}\n      </tr>\n    )\n  }\n  \n  render(){\n    if(this.props.header){\n      return (this.createHeader(this.props.datum))\n    }\n    return (this.createRow(this.props.datum, this.props.index, this.props.term))\n  };\n}\n\nexport default Row;","import React from 'react';\nimport Tables from 'react-bootstrap/Table';\nimport Row from './Row.js';\nimport '../App.css';\n\nclass Table extends React.Component {\n  state = {\n    data : this.props.data,\n    sorted: {\n      col: 'id',\n      dir: 'ascending',\n    }\n  };  \n\n  sortByCol(col){\n    let att = col.toLowerCase();\n    const dir = this.state.sorted.col \n      ? (this.state.sorted.dir === 'ascending' ? 'descending' : 'ascending')\n      : 'descending';\n\n    const sortedData = this.state.data.sort((a, b) => {\n      if(a[att] === null || typeof a[att] === \"number\"){\n        return (a[att] > b[att]) ? 1 : - 1;\n      }else{\n        return (a[att].toLowerCase() > b[att].toLowerCase()) ? 1 : - 1\n      }\n    });\n\n    if(dir === 'descending'){\n      sortedData.reverse();\n    }\n\n    this.setState({\n      data: sortedData,\n      sorted: {\n        col: att,\n        dir\n      }\n    });\n  }\n\n  includesTerm(obj, term){\n    if(term.length < 1) return true;\n    let included = false;\n    const keys = Object.keys(obj);\n    keys.forEach((key) => {\n      if(obj[key] !== null && obj[key].toString().includes(term)){\n        included = true;\n      }\n    })\n    return included;\n  }\n\n  filterByTerm(term){\n    return this.state.data\n      .filter((row) => this.includesTerm(row, term))\n      .map((datum, index) => (\n        <Row key={`${datum.role}-${datum.id}`} datum={datum} index={index} header={false} term={term}/>\n      ));\n  }\n\n  render(){\n    const rows = this.filterByTerm(this.props.searchTerm);\n\n    return (\n      <Tables striped bordered hover variant=\"dark\">\n        <thead>\n          <Row\n            datum={Object.keys(this.state.data[0])}\n            sortBy={this.state.sorted.col}\n            sortDir={this.state.sorted.dir}\n            header={true}\n            onClick={(event) => this.sortByCol(event)}/>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Tables>\n    );\n  }\n}\n\nexport default Table;\n","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport {FaSearch} from 'react-icons/fa/';\nimport '../App.css';\n\nclass SearchBar extends React.Component{\n  render(){\n    return (\n      <InputGroup className=\"mb-3 search\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"inputGroup-sizing-default\"><FaSearch className=\"flip\"/></InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          value={this.props.searchTerm}\n          onChange={this.props.handleInputChange}\n          aria-label=\"Default\"\n          aria-describedby=\"inputGroup-sizing-default\"\n        />\n      </InputGroup>\n    )\n  };\n}\n\nexport default SearchBar;","import React from 'react';\nimport {FaReact} from 'react-icons/fa/';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SearchBar from './SearchBar.js';\nimport '../App.css';\n\nclass Header extends React.Component{\n  render(){\n    return(        \n        <Container fluid className=\"App-header\">\n          <Row className=\"mb-2\">\n            <Col >\n              <nav >\n                <span ><FaReact className=\"App-logo\"/> Employee Directory</span>\n              </nav>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col>\n              <SearchBar\n                handleInputChange={this.props.handleInputChange}\n                searchTerm={this.props.searchTerm}  \n              />\n            </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Header;\n\n\n","import React from 'react';\nimport {FaCode, FaHeart} from 'react-icons/fa/';\nimport '../App.css';\n\nclass Footer extends React.Component{\n  render(){\n    return(\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <span className=\"text-muted\">\n            <FaCode className=\"flip\"/> with <FaHeart className=\"flip\"/> by <a href=\"http://www.spazcool.com\">Douglas Wright</a>\n          </span>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from './components/Table.js';\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\nimport './App.css';\nimport data from './data/example.json';\n\nclass App extends React.Component{\n  state = {\n    searchTerm: \"\"\n  };\n\n  handleInputChange = (event) =>{\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header\n          handleInputChange={this.handleInputChange}\n          searchTerm={this.state.searchTerm}  \n        />\n        <Container className=\"wrapper\">\n          <Row className=\"mt-2 mb-2\">\n            <Col>\n              <Table data={data} searchTerm={this.state.searchTerm}/>\n            </Col>\n          </Row>\n        </Container>\n        <Footer/>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}